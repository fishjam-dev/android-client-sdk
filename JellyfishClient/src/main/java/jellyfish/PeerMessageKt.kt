// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: jellyfish/peer_notifications.proto

package jellyfish

@JvmName("-initializepeerMessage")
inline fun peerMessage(block: PeerMessageKt.Dsl.() -> Unit): PeerNotifications.PeerMessage =
    PeerMessageKt.Dsl._create(PeerNotifications.PeerMessage.newBuilder()).apply { block() }._build()

object PeerMessageKt {
    @OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    class Dsl private constructor(
        private val _builder: PeerNotifications.PeerMessage.Builder
    ) {
        companion object {
            @JvmSynthetic
            @PublishedApi
            internal fun _create(builder: PeerNotifications.PeerMessage.Builder): Dsl = Dsl(builder)
        }

        @JvmSynthetic
        @PublishedApi
        internal fun _build(): PeerNotifications.PeerMessage = _builder.build()

        /**
         * <code>.jellyfish.PeerMessage.Authenticated authenticated = 1;</code>
         */
        var authenticated: PeerNotifications.PeerMessage.Authenticated
            @JvmName("getAuthenticated")
            get() = _builder.authenticated

            @JvmName("setAuthenticated")
            set(value) {
                _builder.setAuthenticated(value)
            }

        /**
         * <code>.jellyfish.PeerMessage.Authenticated authenticated = 1;</code>
         */
        fun clearAuthenticated() {
            _builder.clearAuthenticated()
        }

        /**
         * <code>.jellyfish.PeerMessage.Authenticated authenticated = 1;</code>
         * @return Whether the authenticated field is set.
         */
        fun hasAuthenticated(): Boolean {
            return _builder.hasAuthenticated()
        }

        /**
         * <code>.jellyfish.PeerMessage.AuthRequest auth_request = 2;</code>
         */
        var authRequest: PeerNotifications.PeerMessage.AuthRequest
            @JvmName("getAuthRequest")
            get() = _builder.authRequest

            @JvmName("setAuthRequest")
            set(value) {
                _builder.setAuthRequest(value)
            }

        /**
         * <code>.jellyfish.PeerMessage.AuthRequest auth_request = 2;</code>
         */
        fun clearAuthRequest() {
            _builder.clearAuthRequest()
        }

        /**
         * <code>.jellyfish.PeerMessage.AuthRequest auth_request = 2;</code>
         * @return Whether the authRequest field is set.
         */
        fun hasAuthRequest(): Boolean {
            return _builder.hasAuthRequest()
        }

        /**
         * <code>.jellyfish.PeerMessage.MediaEvent media_event = 3;</code>
         */
        var mediaEvent: PeerNotifications.PeerMessage.MediaEvent
            @JvmName("getMediaEvent")
            get() = _builder.mediaEvent

            @JvmName("setMediaEvent")
            set(value) {
                _builder.setMediaEvent(value)
            }

        /**
         * <code>.jellyfish.PeerMessage.MediaEvent media_event = 3;</code>
         */
        fun clearMediaEvent() {
            _builder.clearMediaEvent()
        }

        /**
         * <code>.jellyfish.PeerMessage.MediaEvent media_event = 3;</code>
         * @return Whether the mediaEvent field is set.
         */
        fun hasMediaEvent(): Boolean {
            return _builder.hasMediaEvent()
        }

        val contentCase: PeerNotifications.PeerMessage.ContentCase
            @JvmName("getContentCase")
            get() = _builder.contentCase

        fun clearContent() {
            _builder.clearContent()
        }
    }

    @JvmName("-initializeauthenticated")
    inline fun authenticated(block: AuthenticatedKt.Dsl.() -> Unit): PeerNotifications.PeerMessage.Authenticated =
        AuthenticatedKt.Dsl._create(PeerNotifications.PeerMessage.Authenticated.newBuilder()).apply {
            block()
        }._build()

    object AuthenticatedKt {
        @OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
        @com.google.protobuf.kotlin.ProtoDslMarker
        class Dsl private constructor(
            private val _builder: PeerNotifications.PeerMessage.Authenticated.Builder
        ) {
            companion object {
                @JvmSynthetic
                @PublishedApi
                internal fun _create(builder: PeerNotifications.PeerMessage.Authenticated.Builder): Dsl = Dsl(builder)
            }

            @JvmSynthetic
            @PublishedApi
            internal fun _build(): PeerNotifications.PeerMessage.Authenticated = _builder.build()
        }
    }

    @JvmName("-initializeauthRequest")
    inline fun authRequest(block: AuthRequestKt.Dsl.() -> Unit): PeerNotifications.PeerMessage.AuthRequest =
        AuthRequestKt.Dsl._create(PeerNotifications.PeerMessage.AuthRequest.newBuilder()).apply {
            block()
        }._build()

    object AuthRequestKt {
        @OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
        @com.google.protobuf.kotlin.ProtoDslMarker
        class Dsl private constructor(
            private val _builder: PeerNotifications.PeerMessage.AuthRequest.Builder
        ) {
            companion object {
                @JvmSynthetic
                @PublishedApi
                internal fun _create(builder: PeerNotifications.PeerMessage.AuthRequest.Builder): Dsl = Dsl(builder)
            }

            @JvmSynthetic
            @PublishedApi
            internal fun _build(): PeerNotifications.PeerMessage.AuthRequest = _builder.build()

            /**
             * <code>string token = 1;</code>
             */
            var token: String
                @JvmName("getToken")
                get() = _builder.getToken()

                @JvmName("setToken")
                set(value) {
                    _builder.setToken(value)
                }

            /**
             * <code>string token = 1;</code>
             */
            fun clearToken() {
                _builder.clearToken()
            }
        }
    }

    @JvmName("-initializemediaEvent")
    inline fun mediaEvent(block: MediaEventKt.Dsl.() -> Unit): PeerNotifications.PeerMessage.MediaEvent =
        MediaEventKt.Dsl._create(
            PeerNotifications.PeerMessage.MediaEvent.newBuilder()
        ).apply { block() }._build()

    object MediaEventKt {
        @OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
        @com.google.protobuf.kotlin.ProtoDslMarker
        class Dsl private constructor(
            private val _builder: PeerNotifications.PeerMessage.MediaEvent.Builder
        ) {
            companion object {
                @JvmSynthetic
                @PublishedApi
                internal fun _create(builder: PeerNotifications.PeerMessage.MediaEvent.Builder): Dsl = Dsl(builder)
            }

            @JvmSynthetic
            @PublishedApi
            internal fun _build(): PeerNotifications.PeerMessage.MediaEvent = _builder.build()

            /**
             * <code>string data = 1;</code>
             */
            var data: String
                @JvmName("getData")
                get() = _builder.getData()

                @JvmName("setData")
                set(value) {
                    _builder.setData(value)
                }

            /**
             * <code>string data = 1;</code>
             */
            fun clearData() {
                _builder.clearData()
            }
        }
    }
}

@JvmSynthetic
inline fun PeerNotifications.PeerMessage.copy(block: PeerMessageKt.Dsl.() -> Unit): PeerNotifications.PeerMessage =
    PeerMessageKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@JvmSynthetic
inline fun PeerNotifications.PeerMessage.Authenticated.copy(
    block: PeerMessageKt.AuthenticatedKt.Dsl.() -> Unit
): PeerNotifications.PeerMessage.Authenticated = PeerMessageKt.AuthenticatedKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@JvmSynthetic
inline fun PeerNotifications.PeerMessage.AuthRequest.copy(
    block: PeerMessageKt.AuthRequestKt.Dsl.() -> Unit
): PeerNotifications.PeerMessage.AuthRequest = PeerMessageKt.AuthRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@JvmSynthetic
inline fun PeerNotifications.PeerMessage.MediaEvent.copy(
    block: PeerMessageKt.MediaEventKt.Dsl.() -> Unit
): PeerNotifications.PeerMessage.MediaEvent = PeerMessageKt.MediaEventKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val PeerNotifications.PeerMessageOrBuilder.authenticatedOrNull: PeerNotifications.PeerMessage.Authenticated?
    get() = if (hasAuthenticated()) getAuthenticated() else null

val PeerNotifications.PeerMessageOrBuilder.authRequestOrNull: PeerNotifications.PeerMessage.AuthRequest?
    get() = if (hasAuthRequest()) getAuthRequest() else null

val PeerNotifications.PeerMessageOrBuilder.mediaEventOrNull: PeerNotifications.PeerMessage.MediaEvent?
    get() = if (hasMediaEvent()) getMediaEvent() else null
